"use client"

import type React from "react"
import { cn } from "@/lib/utils"

// Define the props interface
interface HorizontalMarqueeProps {
  className?: string
  containerClassName?: string
  itemClassName?: string
  gap?: number
  speed?: number
  pauseOnHover?: boolean
  icons?: React.ReactNode[]
}

// Tech icons collection
export const TechIcons = [
  // React
  <svg key="react" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M12 13.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3Z" />
    <path d="M12 22.5c-5.799 0-10.5-2.535-10.5-5.25 0-1.465.968-2.838 2.682-3.943-1.572-1.067-2.682-2.394-2.682-3.807 0-2.715 4.701-5.25 10.5-5.25s10.5 2.535 10.5 5.25c0 1.413-1.11 2.74-2.682 3.807 1.714 1.105 2.682 2.478 2.682 3.943 0 2.715-4.701 5.25-10.5 5.25ZM12 6c-4.963 0-9 2.037-9 3.75s4.037 3.75 9 3.75 9-2.037 9-3.75S16.963 6 12 6Zm0 15c4.963 0 9-2.037 9-3.75 0-1.125-1.226-2.183-3.273-2.933-1.393.585-3.163.933-5.727.933s-4.334-.348-5.727-.933C4.226 15.067 3 16.125 3 17.25c0 1.713 4.037 3.75 9 3.75Z" />
  </svg>,

  // Next.js
  <svg key="nextjs" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M11.572 0c-.176 0-.31.001-.358.007a19.76 19.76 0 0 1-.364.033C7.443.346 4.25 2.185 2.228 5.012a11.875 11.875 0 0 0-2.119 5.243c-.096.659-.108.854-.108 1.747s.012 1.089.108 1.748c.652 4.506 3.86 8.292 8.209 9.695.779.25 1.6.422 2.534.525.363.04 1.935.04 2.299 0 1.611-.178 2.977-.577 4.323-1.264.207-.106.247-.134.219-.158-.02-.013-.9-1.193-1.955-2.62l-1.919-2.592-2.404-3.558a338.739 338.739 0 0 0-2.422-3.556c-.009-.002-.018 1.579-.023 3.51-.007 3.38-.01 3.515-.052 3.595a.426.426 0 0 1-.206.214c-.075.037-.14.044-.495.044H7.81l-.108-.068a.438.438 0 0 1-.157-.171l-.05-.106.006-4.703.007-4.705.072-.092a.645.645 0 0 1 .174-.143c.096-.047.134-.051.54-.051.478 0 .558.018.682.154.035.038 1.337 1.999 2.895 4.361a10760.433 10760.433 0 0 0 4.735 7.17l1.9 2.879.096-.063a12.317 12.317 0 0 0 2.466-2.163 11.944 11.944 0 0 0 2.824-6.134c.096-.66.108-.854.108-1.748 0-.893-.012-1.088-.108-1.747-.652-4.506-3.859-8.292-8.208-9.695a12.597 12.597 0 0 0-2.499-.523A33.119 33.119 0 0 0 11.573 0zm4.069 7.217c.347 0 .408.005.486.047a.473.473 0 0 1 .237.277c.018.06.023 1.365.018 4.304l-.006 4.218-.744-1.14-.746-1.14v-3.066c0-1.982.01-3.097.023-3.15a.478.478 0 0 1 .233-.296c.096-.05.13-.054.5-.054z" />
  </svg>,

  // Vercel
  <svg key="vercel" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M12 1l12 21H0L12 1z" />
  </svg>,

  // TypeScript
  <svg key="typescript" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M1.125 0C.502 0 0 .502 0 1.125v21.75C0 23.498.502 24 1.125 24h21.75c.623 0 1.125-.502 1.125-1.125V1.125C24 .502 23.498 0 22.875 0zm17.363 9.75c.612 0 1.154.037 1.627.111a6.38 6.38 0 0 1 1.306.34v2.458a3.95 3.95 0 0 0-.643-.361 5.093 5.093 0 0 0-.717-.26 5.453 5.453 0 0 0-1.426-.2c-.3 0-.573.028-.819.086a2.1 2.1 0 0 0-.623.242c-.17.104-.3.229-.393.374a.888.888 0 0 0-.14.49c0 .196.053.373.156.529.104.156.252.304.443.444s.423.276.696.41c.273.135.582.274.926.416.47.197.892.407 1.266.628.374.222.695.473.963.753.268.279.472.598.614.957.142.359.214.776.214 1.253 0 .657-.125 1.21-.373 1.656a3.033 3.033 0 0 1-1.012 1.085 4.38 4.38 0 0 1-1.487.596c-.566.12-1.163.18-1.79.18a9.916 9.916 0 0 1-1.84-.164 5.544 5.544 0 0 1-1.512-.493v-2.63a5.033 5.033 0 0 0 3.237 1.2c.333 0 .624-.03.872-.09.249-.06.456-.144.623-.25.166-.108.29-.234.373-.38a1.023 1.023 0 0 0-.074-1.089 2.12 2.12 0 0 0-.537-.5 5.597 5.597 0 0 0-.807-.444 27.72 27.72 0 0 0-.1.007-.436c-.918-.383-1.602-.852-2.053-1.405-.45-.553-.676-1.222-.676-2.005 0-.614.123-1.141.369-1.582.246-.441.58-.804 1.004-1.089a4.494 4.494 0 0 1 1.47-.629 7.536 7.536 0 0 1 1.77-.201zm-15.113.188h9.563v2.166H9.506v9.646H6.789v-9.646H3.375z" />
  </svg>,

  // Tailwind CSS
  <svg key="tailwind" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M12.001 4.8c-3.2 0-5.2 1.6-6 4.8 1.2-1.6 2.6-2.2 4.2-1.8.913.228 1.565.89 2.288 1.624C13.666 10.618 15.027 12 18.001 12c3.2 0 5.2-1.6 6-4.8-1.2 1.6-2.6 2.2-4.2 1.8-.913-.228-1.565-.89-2.288-1.624C16.337 6.182 14.976 4.8 12.001 4.8zm-6 7.2c-3.2 0-5.2 1.6-6 4.8 1.2-1.6 2.6-2.2 4.2-1.8.913.228 1.565.89 2.288 1.624 1.177 1.194 2.538 2.576 5.512 2.576 3.2 0 5.2-1.6 6-4.8-1.2 1.6-2.6 2.2-4.2 1.8-.913-.228-1.565-.89-2.288-1.624C10.337 13.382 8.976 12 6.001 12z" />
  </svg>,

  // Node.js
  <svg key="nodejs" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M11.998 24c-.321 0-.641-.084-.923-.252L8.857 22.27c-.44-.246-.226-.334-.08-.383.586-.203.703-.25 1.328-.604.066-.037.151-.024.219.015l1.657 1.098c.083.044.2.044.274 0l6.478-4.249c.083-.044.134-.132.134-.226v-8.495c0-.094-.051-.182-.134-.226l-6.478-4.249c-.083-.044-.191-.044-.274 0l-6.478 4.249c-.083.044-.134.131-.134.226v8.495c0 .093.051.181.134.226l1.774 1.161c1.307.654 2.11-.116 2.11-.891v-8.39c0-.142.114-.252.254-.252h.82c.139 0 .255.11.255.252v8.39c0 1.745-.95 2.745-2.604 2.745-.509 0-.91 0-2.028-.55l-1.699-1.104A1.848 1.848 0 0 1 2 20.365v-8.495c0-.677.36-1.306.923-1.643L9.401.978A1.85 1.85 0 0 1 11.247.978l6.478 4.249c.563.337.923.966.923 1.643v8.495c0 .677-.36 1.306-.923 1.643l-6.478 4.249c-.282.168-.602.252-.923.252zm2.606-8.949c-2.838 0-3.432-1.302-3.432-2.394 0-.105.084-.189.188-.189h.836c.094 0 .171.067.186.16.127.857.504 1.29 2.222 1.29 1.366 0 1.945-.309 1.945-1.034 0-.418-.164-.727-2.294-.935-1.779-.175-2.878-.57-2.878-1.995 0-1.316 1.109-2.1 2.97-2.1 2.094 0 3.127.726 3.258 2.286.005.061-.017.12-.061.166-.043.045-.104.072-.166.072h-.84c-.088 0-.165-.063-.184-.148-.204-.978-.697-1.292-2.007-1.292-1.479 0-1.648.516-1.648.901 0 .47.202.605 2.222.87 1.997.263 2.95.636 2.95 2.048 0 1.418-1.18 2.245-3.238 2.245z" />
  </svg>,

  // Firebase
  <svg key="firebase" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M3.89 15.673L6.255.461A.542.542 0 0 1 7.27.289L9.813 5.06 3.89 15.673zm16.795 3.691L18.433 5.365a.543.543 0 0 0-.918-.295l-14.2 14.294 7.857 4.428a1.62 1.62 0 0 0 1.587 0l7.926-4.428zM14.3 7.148l-1.82-3.482a.542.542 0 0 0-.96 0L3.53 17.984 14.3 7.148z" />
  </svg>,

  // MongoDB
  <svg key="mongodb" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-full h-full">
    <path d="M17.193 9.555c-1.264-5.58-4.252-7.414-4.573-8.115-.28-.394-.53-.954-.735-1.44-.036.495-.055.685-.523 1.184-.723.566-4.438 3.682-4.74 10.02-.282 5.912 4.27 9.435 4.888 9.884l.07.05A73.49 73.49 0 0 1 11.91 24h.481c.114-1.032.284-2.056.51-3.07.417-.296.604-.463.85-.693a11.342 11.342 0 0 0 3.639-8.464c.01-.814-.103-1.662-.197-2.218zm-5.336 8.195s0-8.291.275-8.29c.213 0 .49 10.695.49 10.695-.381-.045-.765-1.76-.765-2.405z" />
  </svg>,
]

export function HorizontalMarquee({
  className,
  containerClassName,
  itemClassName,
  gap = 100, // Much larger gap between icons
  speed = 25, // Lower number = faster (seconds to complete one cycle)
  pauseOnHover = false,
  icons = TechIcons,
}: HorizontalMarqueeProps) {
  // Define the CSS for the animation
  const marqueeAnimation = `
    @keyframes marquee {
      0% {
        transform: translateX(0);
      }
      100% {
        transform: translateX(-50%);
      }
    }
  `

  return (
    <div className={cn("relative overflow-hidden py-6", className)}>
      <style>{marqueeAnimation}</style>

      <div className="flex overflow-hidden">
        <div
          className={cn("flex whitespace-nowrap", containerClassName)}
          style={{
            animation: `marquee ${speed}s linear infinite`,
            animationPlayState: pauseOnHover ? "paused" : "running",
            gap: `${gap}px`,
          }}
          onMouseEnter={() =>
            pauseOnHover &&
            document
              .querySelectorAll(".marquee-animation")
              .forEach((el) => ((el as HTMLElement).style.animationPlayState = "paused"))
          }
          onMouseLeave={() =>
            pauseOnHover &&
            document
              .querySelectorAll(".marquee-animation")
              .forEach((el) => ((el as HTMLElement).style.animationPlayState = "running"))
          }
        >
          {/* First set of icons */}
          {icons.map((icon, index) => (
            <div key={index} className={cn("shrink-0 w-16 h-16", itemClassName)}>
              {icon}
            </div>
          ))}

          {/* Duplicate set for seamless looping */}
          {icons.map((icon, index) => (
            <div key={`clone-${index}`} className={cn("shrink-0 w-16 h-16", itemClassName)}>
              {icon}
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

